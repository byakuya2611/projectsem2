/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Home;

import DAO.ChairDAO;
import DAO.TicketDAO;
import DAO.MovieDAO;
import DAO.ScheduleDAO;
import Model.Chair;
import Model.Movie;
import Model.Schedule;
import Model.Ticket;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class TicketManage extends javax.swing.JFrame {

    //Khai bao bien
    private JFrame frame;
    DefaultTableModel tableModel;
    List<Ticket> listTickets = new ArrayList<>();
    List<Movie> listMovies = new ArrayList<>();
    List<Schedule> listSchedules = new ArrayList<>();
    List<Chair> listChairs = new ArrayList<>();
    private static int userId;
    /**
     * Creates new form MovieDetail
     */
    public TicketManage(int userId) {
        initComponents();
        this.userId = userId;
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        tableModel = (DefaultTableModel) TicketTable.getModel();
        listTickets = TicketDAO.GetListTicket();
        listMovies = MovieDAO.getListMovie();    
        showTicket();
        TicketTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int index = TicketTable.getSelectedRow();
                Ticket ticket = listTickets.get(index);
                CodeTxt.setText(" Code: " + ticket.getCode());
                RoomTxt.setText(" Room:    " + ticket.getRoom_name());
                ChairTxt.setText(" Chair:    " + ticket.getChair_name());
                MovieNameTxt.setText(" Movie Name: " + ticket.getMovie_name());
                DateTxt.setText(" Date:    " + ticket.getDate());
                TimeTxt.setText(" Time:    " + ticket.getTime());
                
            }

            @Override
            public void mousePressed(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
    
    //showTable
    public void showTicket() {
        tableModel.setRowCount(0);
        listTickets.forEach(ticket -> {
            tableModel.addRow(new Object[] {
                ticket.getCode(),
                ticket.getUser_id(),
                ticket.getMovie_name(),
                ticket.getRoom_name(),
                ticket.getChair_name(),        
                ticket.getDate(),
                ticket.getTime()
            
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        toppanel = new javax.swing.JPanel();
        TitleTxt = new javax.swing.JLabel();
        bottompanel = new javax.swing.JPanel();
        BackBtn = new javax.swing.JButton();
        bodypanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TicketTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        CodeTxt = new javax.swing.JLabel();
        MovieNameTxt = new javax.swing.JLabel();
        RoomTxt = new javax.swing.JLabel();
        ChairTxt = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        SearchBtn = new javax.swing.JButton();
        ResetBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        DateTxt = new javax.swing.JLabel();
        TimeTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(164, 84));

        jPanel2.setBackground(new java.awt.Color(0, 102, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(1278, 760));
        jPanel2.setLayout(new java.awt.BorderLayout());

        toppanel.setBackground(new java.awt.Color(0, 102, 204));
        toppanel.setPreferredSize(new java.awt.Dimension(1278, 64));
        toppanel.setLayout(new java.awt.BorderLayout());

        TitleTxt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TitleTxt.setForeground(new java.awt.Color(255, 255, 255));
        TitleTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleTxt.setText("Ticket Manager");
        toppanel.add(TitleTxt, java.awt.BorderLayout.CENTER);

        jPanel2.add(toppanel, java.awt.BorderLayout.PAGE_START);

        bottompanel.setBackground(new java.awt.Color(19, 15, 64));
        bottompanel.setPreferredSize(new java.awt.Dimension(1278, 70));
        bottompanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackBtn.setBackground(new java.awt.Color(0, 102, 153));
        BackBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BackBtn.setForeground(new java.awt.Color(255, 255, 255));
        BackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo/backburger.png"))); // NOI18N
        BackBtn.setText("Back");
        BackBtn.setPreferredSize(new java.awt.Dimension(150, 50));
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        bottompanel.add(BackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jPanel2.add(bottompanel, java.awt.BorderLayout.PAGE_END);

        TicketTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TicketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "User", "Movie", "Room", "Chair", "Date", "Time"
            }
        ));
        jScrollPane1.setViewportView(TicketTable);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        CodeTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CodeTxt.setText("Code:");
        CodeTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        MovieNameTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        MovieNameTxt.setText(" Movie Name:");
        MovieNameTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        RoomTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RoomTxt.setText(" Room:");
        RoomTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ChairTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ChairTxt.setText("Chair:");
        ChairTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        SearchBtn.setBackground(new java.awt.Color(54, 33, 88));
        SearchBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setText("Search");
        SearchBtn.setPreferredSize(new java.awt.Dimension(100, 35));
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        ResetBtn.setBackground(new java.awt.Color(54, 33, 88));
        ResetBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ResetBtn.setForeground(new java.awt.Color(255, 255, 255));
        ResetBtn.setText("Reset");
        ResetBtn.setPreferredSize(new java.awt.Dimension(100, 35));
        ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setBackground(new java.awt.Color(54, 33, 88));
        DeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteBtn.setText("Delete");
        DeleteBtn.setPreferredSize(new java.awt.Dimension(100, 35));
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        DateTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DateTxt.setText("Date:");
        DateTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TimeTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        TimeTxt.setText("Time:");
        TimeTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 114, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ResetBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RoomTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MovieNameTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ChairTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DateTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TimeTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(83, 83, 83)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(117, 117, 117))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addComponent(CodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(ResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(MovieNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RoomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ChairTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout bodypanelLayout = new javax.swing.GroupLayout(bodypanel);
        bodypanel.setLayout(bodypanelLayout);
        bodypanelLayout.setHorizontalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodypanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(bodypanelLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(410, Short.MAX_VALUE))
        );
        bodypanelLayout.setVerticalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodypanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );

        jPanel2.add(bodypanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedIndex = TicketTable.getSelectedRow();
        if (selectedIndex >= 0) {
            Ticket ticket = listTickets.get(selectedIndex);
            int option = JOptionPane.showConfirmDialog(this, "Do you want delete this ticket?");
            if(option == 0) {
                TicketDAO.Delete(ticket.getTicket_id());
                Reset();
            }
            listTickets = TicketDAO.GetListTicket();
            showTicket();
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here
        
        String input = JOptionPane.showInputDialog(this, "Enter ticket code:");
        if(input != null && input.length() > 0) {
            List<Ticket> tickets = TicketDAO.Find(input.toUpperCase());
            tableModel.setRowCount(0);
            tickets.forEach(ticket -> {
                tableModel.addRow(new Object[] {
                    ticket.getCode(),
                    ticket.getUser_id(),
                    ticket.getMovie_name(),
                    ticket.getRoom_name(),
                    ticket.getChair_name(),        
                    ticket.getDate(),
                    ticket.getTime()
                });
            });
            TicketTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int index = TicketTable.getSelectedRow();
                Ticket ticket = tickets.get(index);
                CodeTxt.setText(" Code: " + ticket.getCode());
                RoomTxt.setText(" Room:    " + ticket.getRoom_name());
                ChairTxt.setText(" Chair:    " + ticket.getChair_name());
                MovieNameTxt.setText(" Movie Name: " + ticket.getMovie_name());
                DateTxt.setText(" Date:    " + ticket.getDate());
                TimeTxt.setText(" Time:    " + ticket.getTime());
                
            }

            @Override
            public void mousePressed(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }
            });
        } else {
            showTicket();
            TicketTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int index = TicketTable.getSelectedRow();
                Ticket ticket = listTickets.get(index);
                CodeTxt.setText(" Code: " + ticket.getCode());
                RoomTxt.setText(" Room:    " + ticket.getRoom_name());
                ChairTxt.setText(" Chair:    " + ticket.getChair_name());
                MovieNameTxt.setText(" Movie Name: " + ticket.getMovie_name());
                DateTxt.setText(" Date:    " + ticket.getDate());
                TimeTxt.setText(" Time:    " + ticket.getTime());
                
            }

            @Override
            public void mousePressed(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }
            });
        }
        
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBtnActionPerformed
        // TODO add your handling code here:
        Reset();
    }//GEN-LAST:event_ResetBtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        if(userId == 1) {
            AdminHome adHome = new AdminHome(userId);
            adHome.setExtendedState(MAXIMIZED_BOTH);
            adHome.setVisible(true);
            this.setVisible(false);
        } else {
            EmployeeHome emHome = new EmployeeHome(userId);
            emHome.setExtendedState(MAXIMIZED_BOTH);
            emHome.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_BackBtnActionPerformed

    private void Reset() {
        MovieNameTxt.setText("");
        RoomTxt.setText("");
        ChairTxt.setText("");
        CodeTxt.setText("");
        DateTxt.setText("");
        TimeTxt.setText("");
    }
    
    private StringBuilder Validation(String movieId, String room, String chairId, String type, String discount) {
        StringBuilder sb = new StringBuilder();
        Pattern moviePattern = Pattern.compile("[0-9]");
        Matcher movieMatcher = moviePattern.matcher(movieId);
        if(movieId.equals("")) {
            sb.append("Movie id is empty!!");
        } else if (!movieMatcher.find()) {
            sb.append("Movie id must be 0-9");
        }
        if(room.equals("Choose")) {
            sb.append("Room is empty");
        }
        if(chairId.equals("")) {
            sb.append("Chair id is empty");
        }
        if(type.equals("Choose")) {
            sb.append("Type is empty");
        }
        if(discount.equals("Choose")) {
            sb.append("Discount is empty");
        }
        
        
        return sb;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketManage(userId).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JLabel ChairTxt;
    private javax.swing.JLabel CodeTxt;
    private javax.swing.JLabel DateTxt;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JLabel MovieNameTxt;
    private javax.swing.JButton ResetBtn;
    private javax.swing.JLabel RoomTxt;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTable TicketTable;
    private javax.swing.JLabel TimeTxt;
    private javax.swing.JLabel TitleTxt;
    private javax.swing.JPanel bodypanel;
    private javax.swing.JPanel bottompanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPanel toppanel;
    // End of variables declaration//GEN-END:variables
}
